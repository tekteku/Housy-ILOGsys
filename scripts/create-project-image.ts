import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// Get the directory path
const __dirname = path.dirname(fileURLToPath(import.meta.url));

// Simple function to create a default project image
function createDefaultProjectImage() {
    // Base64 encoded small PNG image (blue building icon)
    const base64Image = `iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAACXBIWXMAAAsTAAALEwEAmpwYAAAF0WlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMxNDAgNzkuMTYwNDUxLCAyMDE3LzA1LzA2LTAxOjA4OjIxICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ0MgMjAxOCAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjUtMDUtMTNUMDc6NDA6MjErMDI6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDI1LTA1LTEzVDA3OjQwOjQ5KzAyOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDI1LTA1LTEzVDA3OjQwOjQ5KzAyOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgcGhvdG9zaG9wOklDQ1Byb2ZpbGU9InNSR0IgSUVDNjE5NjYtMi4xIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjA2ZDU1ZDM0LTVl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`;
    
    // Convert base64 string to a buffer
    const imageBuffer = Buffer.from(base64Image, 'base64');
    
    // Define file path
    const filePath = path.join(__dirname, '../../static/images/projects/default.png');
    
    // Ensure directory exists
    const dir = path.dirname(filePath);
    if (!fs.existsSync(dir)) {
        fs.mkdirSync(dir, { recursive: true });
    }
    
    // Write the file
    fs.writeFileSync(filePath, imageBuffer);
    
    console.log(`Default project image created at ${filePath}`);
}

// Run the function
createDefaultProjectImage();
